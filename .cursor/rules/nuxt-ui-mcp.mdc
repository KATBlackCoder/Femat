---
alwaysApply: true
description: "Configuration et utilisation de NuxtUI avec support MCP pour l'assistance IA"
---

# NuxtUI MCP Configuration

## Configuration MCP Server

Le projet FEMAT utilise NuxtUI v4 avec support MCP pour une meilleure assistance IA. La configuration MCP est définie dans [.cursor/mcp.json](mdc:.cursor/mcp.json).

### Configuration MCP
```json
{
  "mcpServers": {
    "nuxt-ui": {
      "type": "http",
      "url": "https://ui.nuxt.com/mcp"
    }
  }
}
```

## Utilisation des Composants NuxtUI

### Règles de développement
- Toujours utiliser les composants NuxtUI v4 pour l'interface utilisateur
- Préférer les composants NuxtUI aux composants HTML natifs
- Utiliser la documentation MCP pour obtenir des exemples de code
- Respecter les conventions de nommage NuxtUI (UButton, UCard, etc.)

### Composants disponibles
- **Layout** : UContainer, UHeader, UFooter, UMain
- **Navigation** : UMenu, UDropdown, UBreadcrumb
- **Formulaires** : UInput, UButton, UForm, USelect
- **Affichage** : UCard, UBadge, UAvatar, UAlert
- **Feedback** : UModal, UNotification, ULoading

### Exemples d'utilisation
```vue
<template>
  <UContainer>
    <UCard>
      <UButton color="primary" variant="solid">
        Action
      </UButton>
    </UCard>
  </UContainer>
</template>
```

## Assistance IA avec MCP

### Commandes utiles
- "List all available Nuxt UI components"
- "Get Button component documentation"
- "Find form-related components"
- "Show installation guide"
- "Get v4 migration guide"

### Intégration avec l'architecture
- Les composants NuxtUI s'intègrent parfaitement avec [architecture.md](mdc:architecture.md)
- Respecter la structure définie dans [TODO.md](mdc:TODO.md)
- Utiliser les composants dans les dossiers [app/components/](mdc:app/components/)

## Thème et Personnalisation

### Configuration du thème FEMAT
- Utiliser les variables CSS de NuxtUI pour personnaliser
- Respecter l'identité visuelle de la FEMAT
- Configurer les couleurs dans `nuxt.config.ts`

### Responsive Design
- Utiliser les classes Tailwind CSS intégrées
- Tester sur mobile et desktop
- Respecter l'approche mobile-first