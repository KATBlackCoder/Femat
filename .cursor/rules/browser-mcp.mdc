---
alwaysApply: true
description: "Configuration et utilisation de Browser MCP pour l'automatisation des tests et tâches web"
---

# Browser MCP Configuration

## Configuration MCP Server

Le projet FEMAT utilise Browser MCP pour automatiser les tests et tâches web. La configuration MCP est définie dans [.cursor/mcp.json](mdc:.cursor/mcp.json).

### Configuration MCP Browser
```json
{
  "mcpServers": {
    "browser-mcp": {
      "command": "pnpm",
      "args": [
        "dlx",
        "@browsermcp/server"
      ]
    }
  }
}
```

## Utilisation de Browser MCP

### Règles de développement
- Utiliser Browser MCP pour les tests end-to-end automatisés
- Automatiser les tâches répétitives sur le web
- Tester les flux utilisateur de l'application FEMAT
- Valider les éléments UI et l'accessibilité

### Avantages Browser MCP
- **Rapide** : Automatisation locale sans latence réseau
- **Privé** : Activité du navigateur reste sur votre appareil
- **Connecté** : Utilise votre profil de navigateur existant
- **Furtif** : Évite la détection de bots basique

## Outils Browser MCP

### Navigation
- **Navigate** : Naviguer vers une URL
- **Go Back** : Retourner à la page précédente
- **Go Forward** : Aller à la page suivante
- **Wait** : Attendre un temps spécifié

### Interaction
- **Click** : Cliquer sur un élément
- **Hover** : Survoler un élément
- **Type Text** : Saisir du texte dans un champ
- **Press Key** : Appuyer sur une touche

### Capture
- **Snapshot** : Capturer un snapshot d'accessibilité
- **Screenshot** : Prendre une capture d'écran
- **Get Console Logs** : Récupérer les logs de la console

### Avancé
- **Drag & Drop** : Glisser-déposer entre éléments

## Intégration avec le projet FEMAT

### Tests automatisés
- **Tests E2E** : Tester les flux complets de l'application
- **Validation UI** : Vérifier les composants NuxtUI
- **Tests responsive** : Tester sur différentes tailles d'écran
- **Tests d'accessibilité** : Valider l'accessibilité des pages

### Tâches automatisées
- **Remplissage de formulaires** : Automatiser l'inscription des membres
- **Navigation** : Tester la navigation entre les pages
- **Validation des données** : Vérifier l'affichage des données
- **Tests de performance** : Mesurer les temps de chargement

### Workflows FEMAT
- **Inscription membre** : Automatiser le processus d'inscription
- **Gestion des événements** : Tester la création d'événements
- **Administration** : Valider les fonctionnalités admin
- **Galerie** : Tester l'upload et l'affichage des images

## Commandes utiles avec Browser MCP

### Tests de base
- "Navigate to the FEMAT homepage"
- "Take a screenshot of the current page"
- "Click on the login button"
- "Fill out the member registration form"

### Tests avancés
- "Test the responsive design on mobile"
- "Validate all form inputs"
- "Check the accessibility of the navigation"
- "Test the gallery image upload"

### Automatisation
- "Automate the member registration process"
- "Test the event creation workflow"
- "Validate the admin dashboard functionality"
- "Check the news article creation process"

## Configuration pour FEMAT

### Variables d'environnement
```bash
# Configuration Browser MCP
BROWSER_MCP_ENABLED=true
BROWSER_MCP_PORT=3001
BROWSER_MCP_HEADLESS=false
```

### Configuration de test
```typescript
// Configuration des tests automatisés
export const testConfig = {
  baseUrl: 'http://localhost:3000',
  timeout: 30000,
  headless: false,
  viewport: {
    width: 1280,
    height: 720
  }
}
```

## Bonnes pratiques

### Sécurité
- Utiliser Browser MCP uniquement en développement
- Ne pas exposer les tokens d'accès
- Tester sur des environnements isolés
- Valider les actions avant exécution

### Performance
- Optimiser les temps d'attente
- Utiliser les snapshots d'accessibilité
- Capturer les screenshots uniquement si nécessaire
- Nettoyer les logs de console

### Maintenance
- Documenter les tests automatisés
- Maintenir les sélecteurs d'éléments
- Mettre à jour les tests lors des changements UI
- Surveiller les performances des tests

## Références

- [Documentation Browser MCP](https://browsermcp.io/)
- [Architecture FEMAT](mdc:architecture.md) - Architecture de test
- [TODO.md](mdc:TODO.md) - Plan de développement
- [Configuration MCP](mdc:.cursor/mcp.json) - Configuration complète