---
alwaysApply: true
description: "Règles de développement pour le projet FEMAT - Fédération Malienne de Taekwondo"
---

# Règles de Développement FEMAT

## Contexte du Projet

Le projet FEMAT est une application web pour la **Fédération Malienne de Taekwondo** développée avec Nuxt 4 et NuxtUI v4.

### Objectifs
- Site web moderne pour la fédération
- Gestion des membres et clubs
- Événements et compétitions
- Actualités et galerie
- Administration complète
- Boutique e-commerce FEMAT

## Architecture et Technologies

### Stack Principale
- **Frontend** : Nuxt 4 + Vue 3 + NuxtUI v4
- **Content** : Nuxt Content + Nuxt Studio
- **Database** : Supabase (PostgreSQL)
- **Auth** : Nuxt Supabase
- **Deploy** : Vercel

### Structure du Projet
- [app/](mdc:app/) - Application Nuxt principale
- [components/](mdc:app/components/) - Composants Vue
- [content/](mdc:app/content/) - Contenu Markdown
- [pages/](mdc:app/pages/) - Routes de l'application
- [server/](mdc:app/server/) - API Routes
- [stores/](mdc:app/stores/) - Stores Pinia
- [composables/](mdc:app/composables/) - Logique réutilisable
- [types/](mdc:app/types/) - Types TypeScript

## Règles de Développement

### Code Style
- Utiliser TypeScript pour tous les fichiers
- Respecter les conventions Vue 3 Composition API
- Utiliser les composants NuxtUI v4
- Code en français pour les commentaires et variables métier

### Structure des Composants
```vue
<template>
  <!-- Template avec composants NuxtUI -->
</template>

<script setup lang="ts">
// Logique avec Composition API
</script>

<style scoped>
/* Styles spécifiques si nécessaire */
</style>
```

### Gestion des Données
- Utiliser Pinia pour l'état global
- Supabase pour les données persistantes
- Nuxt Content pour le contenu éditorial


## Phases de Développement

### **Phase 1: Configuration, Structure & Design**
- Setup NuxtUI v4, Nuxt Image, structure projet
- Layout de base, intégration logo FEMAT
- Thème FEMAT, design responsive, branding complet

### **Phase 2: Pages de Base (Statiques)**
- Page d'accueil, À propos, Contact, Histoire
- Navigation, pages d'erreur
- Design responsive et identité visuelle

### **Phase 3: Système de Contenu Statique**
- Setup Nuxt Content, système de news
- Galerie média, module événements
- Contenu éditorial, optimisation SEO

### **Phase 4: Déploiement & Mise en ligne**
- SEO & Performance, Setup Vercel
- Variables d'environnement, domaine personnalisé
- Site FEMAT opérationnel

### **Phase 5: Fonctionnalités Avancées (Post-déploiement)**
- Setup Supabase, modèles de données
- Authentification, inscriptions événements
- Système d'adhésion, profils utilisateurs, dashboard admin

### **Phase 6: Boutique E-commerce FEMAT**
- Setup boutique, gestion produits
- Panier & commandes, paiement
- Produits FEMAT, stock & inventaire, expédition

## Dépendances entre Phases

### **Ordre de Développement**
1. **Phase 1** → **Phase 2** : Configuration avant pages statiques
2. **Phase 2** → **Phase 3** : Pages de base avant contenu dynamique
3. **Phase 3** → **Phase 4** : Contenu complet avant déploiement
4. **Phase 4** → **Phase 5** : Site en ligne avant fonctionnalités avancées
5. **Phase 5** → **Phase 6** : Auth + DB avant e-commerce

### **Logique FEMAT**
- **D'abord informer** : Actualités, événements, règles (Phase 3)
- **Mettre en ligne** : Site opérationnel (Phase 4)
- **Ensuite interactif** : Inscriptions, adhésions (Phase 5)
- **Enfin commercial** : Boutique e-commerce (Phase 6)

## Références

- [TODO.md](mdc:TODO.md) - Plan de développement détaillé
- [architecture.md](mdc:architecture.md) - Architecture complète
- [package.json](mdc:package.json) - Dépendances du projet